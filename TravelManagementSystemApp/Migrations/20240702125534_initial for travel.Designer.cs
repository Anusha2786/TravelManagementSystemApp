// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TravelManagementSystemApp.Data;

#nullable disable

namespace TravelManagementSystemApp.Migrations
{
    [DbContext(typeof(Hasslefreetraveldbcontext))]
    [Migration("20240702125534_initial for travel")]
    partial class initialfortravel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TravelManagementSystemApp.Models.Addreses", b =>
                {
                    b.Property<int>("AddressID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AddressID"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("AddressID");

                    b.ToTable("Addreses");
                });

            modelBuilder.Entity("TravelManagementSystemApp.Models.Airports", b =>
                {
                    b.Property<int>("AirportID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AirportID"));

                    b.Property<int>("AddressID")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("AirportID");

                    b.HasIndex("AddressID");

                    b.ToTable("Airports");
                });

            modelBuilder.Entity("TravelManagementSystemApp.Models.Busschedules", b =>
                {
                    b.Property<int>("scheduleid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("scheduleid"));

                    b.Property<DateTime>("Arrivaltime")
                        .HasColumnType("datetime2");

                    b.Property<int>("BusId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Departuretime")
                        .HasColumnType("datetime2");

                    b.HasKey("scheduleid");

                    b.HasIndex("BusId")
                        .IsUnique();

                    b.ToTable("busschedules");
                });

            modelBuilder.Entity("TravelManagementSystemApp.Models.Entities.Booking_Details", b =>
                {
                    b.Property<int>("Booking_Detail_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Booking_Detail_ID"));

                    b.Property<int>("Booking_ID")
                        .HasColumnType("int");

                    b.Property<int>("Detail_ID")
                        .HasColumnType("int");

                    b.Property<string>("Detail_Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Booking_Detail_ID");

                    b.HasIndex("Booking_ID");

                    b.ToTable("Booking_Details");
                });

            modelBuilder.Entity("TravelManagementSystemApp.Models.Entities.Bookings", b =>
                {
                    b.Property<int>("Booking_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Booking_ID"));

                    b.Property<DateTime>("Booking_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Booking_Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Booking_Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("userid")
                        .HasColumnType("int");

                    b.HasKey("Booking_ID");

                    b.HasIndex("userid");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("TravelManagementSystemApp.Models.Entities.Buses", b =>
                {
                    b.Property<int>("Bus_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Bus_ID"));

                    b.Property<int>("Available_Seats")
                        .HasColumnType("int");

                    b.Property<string>("Bus_Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Bus_Number")
                        .HasMaxLength(20)
                        .HasColumnType("int");

                    b.Property<string>("From_Location")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("To_Location")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Total_Seats")
                        .HasColumnType("int");

                    b.HasKey("Bus_ID");

                    b.ToTable("Buses");
                });

            modelBuilder.Entity("TravelManagementSystemApp.Models.Entities.Cabs", b =>
                {
                    b.Property<int>("Cab_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Cab_ID"));

                    b.Property<string>("CabType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Cab_Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Distance")
                        .HasColumnType("float");

                    b.Property<string>("Dropoff_Location")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("Dropoff_Time")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("FareAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Pickup_Location")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Pickup_Time")
                        .HasColumnType("datetime2");

                    b.HasKey("Cab_ID");

                    b.ToTable("Cabs");
                });

            modelBuilder.Entity("TravelManagementSystemApp.Models.Entities.Flights", b =>
                {
                    b.Property<int>("Flight_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Flight_ID"));

                    b.Property<string>("Airline")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Arrival_Airport")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Available_Seats")
                        .HasColumnType("int");

                    b.Property<string>("Departure_Airport")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Flight_Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Total_Seats")
                        .HasColumnType("int");

                    b.HasKey("Flight_ID");

                    b.ToTable("Flights");
                });

            modelBuilder.Entity("TravelManagementSystemApp.Models.Entities.Payments", b =>
                {
                    b.Property<int>("Payment_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Payment_ID"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int>("Booking_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Payment_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Payment_Method")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Payment_ID");

                    b.HasIndex("Booking_ID");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("TravelManagementSystemApp.Models.Entities.Trains", b =>
                {
                    b.Property<int>("Train_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Train_ID"));

                    b.Property<string>("Arrival_Station")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Available_Seats")
                        .HasColumnType("int");

                    b.Property<string>("Departure_Station")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Total_Seats")
                        .HasColumnType("int");

                    b.Property<string>("Train_Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Train_Number")
                        .HasMaxLength(20)
                        .HasColumnType("int");

                    b.HasKey("Train_ID");

                    b.ToTable("Trains");
                });

            modelBuilder.Entity("TravelManagementSystemApp.Models.Flightschedules", b =>
                {
                    b.Property<int>("scheduleid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("scheduleid"));

                    b.Property<DateTime>("Arrivaltime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Departuretime")
                        .HasColumnType("datetime2");

                    b.Property<int>("FlightId")
                        .HasColumnType("int");

                    b.HasKey("scheduleid");

                    b.HasIndex("FlightId")
                        .IsUnique();

                    b.ToTable("flightschedules");
                });

            modelBuilder.Entity("TravelManagementSystemApp.Models.Hotels", b =>
                {
                    b.Property<int>("HotelID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HotelID"));

                    b.Property<int>("AddressID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("StarRating")
                        .HasColumnType("int");

                    b.HasKey("HotelID");

                    b.HasIndex("AddressID");

                    b.ToTable("Hotels");
                });

            modelBuilder.Entity("TravelManagementSystemApp.Models.Reviews", b =>
                {
                    b.Property<int>("ReviewID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReviewID"));

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EntityID")
                        .HasColumnType("int");

                    b.Property<string>("EntityType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReviewDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ReviewID");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("TravelManagementSystemApp.Models.Rooms", b =>
                {
                    b.Property<int>("RoomID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomID"));

                    b.Property<int>("HotelID")
                        .HasColumnType("int");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<decimal>("PricePerNight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RoomType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RoomID");

                    b.HasIndex("HotelID");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("TravelManagementSystemApp.Models.Stations", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("AddressID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("StationID")
                        .HasColumnType("int");

                    b.HasKey("Code");

                    b.HasIndex("AddressID");

                    b.ToTable("Stations");
                });

            modelBuilder.Entity("TravelManagementSystemApp.Models.Trainschedules", b =>
                {
                    b.Property<int>("scheduleid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("scheduleid"));

                    b.Property<DateTime>("Arrivaltime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Departuretime")
                        .HasColumnType("datetime2");

                    b.Property<int>("TrainId")
                        .HasColumnType("int");

                    b.HasKey("scheduleid");

                    b.HasIndex("TrainId")
                        .IsUnique();

                    b.ToTable("trainschedules");
                });

            modelBuilder.Entity("TravelManagementSystemApp.Models.Users", b =>
                {
                    b.Property<int>("userid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("userid"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Phonenumber")
                        .HasColumnType("int");

                    b.HasKey("userid");

                    b.ToTable("users");
                });

            modelBuilder.Entity("TravelManagementSystemApp.Models.Airports", b =>
                {
                    b.HasOne("TravelManagementSystemApp.Models.Addreses", "Address")
                        .WithMany()
                        .HasForeignKey("AddressID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("TravelManagementSystemApp.Models.Busschedules", b =>
                {
                    b.HasOne("TravelManagementSystemApp.Models.Entities.Buses", "Buses")
                        .WithOne("Busschedule")
                        .HasForeignKey("TravelManagementSystemApp.Models.Busschedules", "BusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Buses");
                });

            modelBuilder.Entity("TravelManagementSystemApp.Models.Entities.Booking_Details", b =>
                {
                    b.HasOne("TravelManagementSystemApp.Models.Entities.Bookings", "Bookings")
                        .WithMany("Booking_Details")
                        .HasForeignKey("Booking_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("TravelManagementSystemApp.Models.Entities.Bookings", b =>
                {
                    b.HasOne("TravelManagementSystemApp.Models.Users", "User")
                        .WithMany()
                        .HasForeignKey("userid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TravelManagementSystemApp.Models.Entities.Payments", b =>
                {
                    b.HasOne("TravelManagementSystemApp.Models.Entities.Bookings", "Bookings")
                        .WithMany("Payments")
                        .HasForeignKey("Booking_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("TravelManagementSystemApp.Models.Flightschedules", b =>
                {
                    b.HasOne("TravelManagementSystemApp.Models.Entities.Flights", "Flights")
                        .WithOne("Flightschedules")
                        .HasForeignKey("TravelManagementSystemApp.Models.Flightschedules", "FlightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flights");
                });

            modelBuilder.Entity("TravelManagementSystemApp.Models.Hotels", b =>
                {
                    b.HasOne("TravelManagementSystemApp.Models.Addreses", "Address")
                        .WithMany()
                        .HasForeignKey("AddressID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("TravelManagementSystemApp.Models.Rooms", b =>
                {
                    b.HasOne("TravelManagementSystemApp.Models.Hotels", "Hotel")
                        .WithMany("Rooms")
                        .HasForeignKey("HotelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("TravelManagementSystemApp.Models.Stations", b =>
                {
                    b.HasOne("TravelManagementSystemApp.Models.Addreses", "Address")
                        .WithMany()
                        .HasForeignKey("AddressID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("TravelManagementSystemApp.Models.Trainschedules", b =>
                {
                    b.HasOne("TravelManagementSystemApp.Models.Entities.Trains", "Trains")
                        .WithOne("Trainschedules")
                        .HasForeignKey("TravelManagementSystemApp.Models.Trainschedules", "TrainId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trains");
                });

            modelBuilder.Entity("TravelManagementSystemApp.Models.Entities.Bookings", b =>
                {
                    b.Navigation("Booking_Details");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("TravelManagementSystemApp.Models.Entities.Buses", b =>
                {
                    b.Navigation("Busschedule")
                        .IsRequired();
                });

            modelBuilder.Entity("TravelManagementSystemApp.Models.Entities.Flights", b =>
                {
                    b.Navigation("Flightschedules")
                        .IsRequired();
                });

            modelBuilder.Entity("TravelManagementSystemApp.Models.Entities.Trains", b =>
                {
                    b.Navigation("Trainschedules")
                        .IsRequired();
                });

            modelBuilder.Entity("TravelManagementSystemApp.Models.Hotels", b =>
                {
                    b.Navigation("Rooms");
                });
#pragma warning restore 612, 618
        }
    }
}
