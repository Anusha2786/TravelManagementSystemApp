// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TravelManagementSystemApp.Data;

#nullable disable

namespace TravelManagementSystemApp.Migrations
{
    [DbContext(typeof(UsersDbContext))]
    partial class UsersDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TravelManagementSystemApp.Models.Bus", b =>
                {
                    b.Property<int>("Bus_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Bus_ID"));

                    b.Property<string>("Arrival_Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Available_Seats")
                        .HasColumnType("int");

                    b.Property<string>("Bus_Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Departure_Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Total_Seats")
                        .HasColumnType("int");

                    b.HasKey("Bus_ID");

                    b.ToTable("buses");
                });

            modelBuilder.Entity("TravelManagementSystemApp.Models.Busschedules", b =>
                {
                    b.Property<int>("scheduleid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("scheduleid"));

                    b.Property<DateTime>("Arrivaltime")
                        .HasColumnType("datetime2");

                    b.Property<int>("BusId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Departuretime")
                        .HasColumnType("datetime2");

                    b.HasKey("scheduleid");

                    b.HasIndex("BusId")
                        .IsUnique();

                    b.ToTable("busschedules");
                });

            modelBuilder.Entity("TravelManagementSystemApp.Models.Flight", b =>
                {
                    b.Property<int>("Flight_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Flight_ID"));

                    b.Property<string>("Airline")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Arrival_Airport")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Available_Seats")
                        .HasColumnType("int");

                    b.Property<string>("Departure_Airport")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Flight_Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Total_Seats")
                        .HasColumnType("int");

                    b.HasKey("Flight_ID");

                    b.ToTable("flights");
                });

            modelBuilder.Entity("TravelManagementSystemApp.Models.Flightschedules", b =>
                {
                    b.Property<int>("scheduleid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("scheduleid"));

                    b.Property<DateTime>("Arrivaltime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Departuretime")
                        .HasColumnType("datetime2");

                    b.Property<int>("FlightId")
                        .HasColumnType("int");

                    b.HasKey("scheduleid");

                    b.HasIndex("FlightId")
                        .IsUnique();

                    b.ToTable("flightschedules");
                });

            modelBuilder.Entity("TravelManagementSystemApp.Models.Train", b =>
                {
                    b.Property<int>("Train_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Train_ID"));

                    b.Property<string>("Arrival_Station")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Available_Seats")
                        .HasColumnType("int");

                    b.Property<string>("Departure_Station")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Total_Seats")
                        .HasColumnType("int");

                    b.Property<string>("Train_Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Train_Operator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Train_ID");

                    b.ToTable("trains");
                });

            modelBuilder.Entity("TravelManagementSystemApp.Models.Trainschedules", b =>
                {
                    b.Property<int>("scheduleid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("scheduleid"));

                    b.Property<DateTime>("Arrivaltime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Departuretime")
                        .HasColumnType("datetime2");

                    b.Property<int>("TrainId")
                        .HasColumnType("int");

                    b.HasKey("scheduleid");

                    b.HasIndex("TrainId")
                        .IsUnique();

                    b.ToTable("trainschedules");
                });

            modelBuilder.Entity("TravelManagementSystemApp.Models.Users", b =>
                {
                    b.Property<int>("userid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("userid"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Phonenumber")
                        .HasColumnType("int");

                    b.HasKey("userid");

                    b.ToTable("users");
                });

            modelBuilder.Entity("TravelManagementSystemApp.Models.Busschedules", b =>
                {
                    b.HasOne("TravelManagementSystemApp.Models.Bus", "Bus")
                        .WithOne("Busschedule")
                        .HasForeignKey("TravelManagementSystemApp.Models.Busschedules", "BusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bus");
                });

            modelBuilder.Entity("TravelManagementSystemApp.Models.Flightschedules", b =>
                {
                    b.HasOne("TravelManagementSystemApp.Models.Flight", "Flight")
                        .WithOne("Flightschedule")
                        .HasForeignKey("TravelManagementSystemApp.Models.Flightschedules", "FlightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flight");
                });

            modelBuilder.Entity("TravelManagementSystemApp.Models.Trainschedules", b =>
                {
                    b.HasOne("TravelManagementSystemApp.Models.Train", "Train")
                        .WithOne("Trainschedule")
                        .HasForeignKey("TravelManagementSystemApp.Models.Trainschedules", "TrainId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Train");
                });

            modelBuilder.Entity("TravelManagementSystemApp.Models.Bus", b =>
                {
                    b.Navigation("Busschedule")
                        .IsRequired();
                });

            modelBuilder.Entity("TravelManagementSystemApp.Models.Flight", b =>
                {
                    b.Navigation("Flightschedule")
                        .IsRequired();
                });

            modelBuilder.Entity("TravelManagementSystemApp.Models.Train", b =>
                {
                    b.Navigation("Trainschedule")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
